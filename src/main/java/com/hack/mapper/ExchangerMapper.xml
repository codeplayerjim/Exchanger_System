<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hack.mapper.ExchangerMapper">
    <resultMap id="BaseResultMap" type="com.hack.entity.Exchanger">
        <id column="e_id" property="e_id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="createTime" property="createTime" jdbcType="DATE"/>
        <result column="collegeid" property="collegeid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        e_id, username, age, createTime, collegeid
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hack.entity.Exchanger" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from exchanger
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from exchanger
        where e_id = #{e_id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from exchanger
        where e_id = #{e_id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.hack.entity.ExchangerExample" >
        delete from exchanger
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.hack.entity.Exchanger" >
        insert into exchanger (e_id, username, age,
                             createTime, collegeid
                )
        values (#{e_id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
                #{createTime,jdbcType=DATE}, #{collegeid,jdbcType=INTEGER}
                )
    </insert>
    <insert id="insertSelective" parameterType="com.hack.entity.Exchanger" >
        insert into exchanger
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="e_id != null" >
                e_id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="age != null" >
                age,
            </if>

            <if test="createTime != null" >
                createTime,
            </if>
            <if test="collegeid != null" >
                collegeid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="e_id != null" >
                #{e_id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>

            <if test="age != null" >
                #{age,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=DATE},
            </if>
            <if test="collegeid != null" >
                #{collegeid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hack.entity.ExchangerExample" resultType="java.lang.Integer" >
        select count(*) from exchanger
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update exchanger
        <set >
            <if test="record.e_id != null" >
                e_id = #{record.e_id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>

            <if test="record.age != null" >
                age = #{record.age,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                createTime = #{record.createTime,jdbcType=DATE},
            </if>
            <if test="record.collegeid != null" >
                collegeID = #{record.collegeid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update exchanger
        set e_id = #{record.e_id,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=INTEGER},
        createTime = #{record.createTime,jdbcType=DATE},
        collegeid = #{record.collegeid,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hack.entity.Exchanger" >
        update exchanger
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="age != null" >
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                createTime = #{createTime,jdbcType=DATE},
            </if>
            <if test="collegeid != null" >
                collegeid = #{collegeid,jdbcType=INTEGER},
            </if>
        </set>
        where e_id = #{e_id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hack.entity.Exchanger" >
        update exchanger
        set username = #{username,jdbcType=VARCHAR},
            age = #{age,jdbcType=INTEGER},
            createTime = #{createTime,jdbcType=DATE},
            collegeid = #{collegeid,jdbcType=INTEGER}
        where e_id = #{e_id,jdbcType=INTEGER}
    </update>

</mapper>